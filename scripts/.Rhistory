datos<-read.csv("dataset.csv",header=T,sep="\t")
dataset<-datos[,2:8]
dataset_neu<-cbind(dataset[,1:(length(dataset)-1)],
label=ifelse(dataset$label=="neutral","neutral","non_neutral"))
summary(dataset_neu)
neu<-dataset_neu[dataset_neu$label=="neutral",]
neu_data<-neu[sample(1:dim(neu)[1],size=76165,replace=F),]
neu<-dataset_neu[dataset_neu$label=="neutral",]
neu_data<-neu[sample(1:dim(neu)[1],size=76165,replace=F),]
dataset_neu_samp<-dataset_neu[c(as.numeric(row.names(neu_data)),
which(dataset_neu$label=="non_neutral")),]
dataset_neu_samp<-dataset_neu_samp[order(as.numeric(rownames(dataset_neu_samp))),]
summary(dataset_neu_samp)
logistic
library("nnet")
library("rpart")
library("rpart.plot")
library("class")
library("e1071")
library("xtable")
library("RWeka")
library("FSelector")
neu_log<-Logistic(label~.,dataset_neu_samp)
neu_log
neu_log2<-glm(label~.,family=binomial(logit), data=dataset_neu_samp)
neu_log2
summary(neu_log2)
summary(dataset_neu_samp)
dataset_neu_samp$label
neu_log2
neu_log2$coefficients
neu_log2$fitted.values
sign(neu_log2$fitted.values)
neu_log2$fitted.values
neu_log
neu_log$terms
neu_log$predictions
table(neu_log$predictions,dataset_neu_samp$label)
neu_log$classifier
neu_log
fix(neu_log)
neu_log2
summary(dataset_neu_samp)
summary(dataset_neu_samp$label)
levels(dataset_neu_samp$label)
levels(dataset_neu_samp$label)<-NULL
levels(dataset_neu_samp$label)<-null
levels(dataset_neu_samp$label)
levels(dataset_neu_samp$label)<-NULL
levels(dataset_neu_samp$label)
arbol<-rpart(label~.,dataset_neu_samp)
rpart.plot(arbol)
dataset_pol<-subset(dataset,label!="neutral")
dataset_pol$label<-as.factor(as.character(dataset_pol$label))
summary(dataset_pol)
dataset_pol<-subset(dataset,label!="neutral")
dataset_pol$label<-as.factor(as.character(dataset_pol$label))
#Balanceo con 32322  negativos y 43843  positivos
pos<-dataset_pol[dataset_pol$label=="positive",]
pos_data<-pos[sample(1:dim(pos)[1],size=32322,replace=F),]
dataset_pol<-rbind(dataset_pol[dataset_pol$label=="negative",],pos_data)
dataset_pol<-dataset_pol[order(as.numeric(rownames(dataset_pol))),]
summary(dataset_pol)
pol_log<-Logistic(label~.,dataset_pol)
pol_log
pol_log<-Logistic(label~.,dataset_pol)
pol_log2<-glm(label~.,family=binomial(logit), data=dataset_pol)
pol_log2
summary(pol_log2)
summary(pol_log)
summary(pol_log2)
summary(neu_log2)
summary(pol_log2)
pol_tree<-rpart(label~.,dataset_pol)
rpart.plot(pol_tree)
pol_log2
summary(dataset_pol$label)
summary(dataset_pol$earthPol)
View(dataset)
View(datos)
20*0.07
5*8
0.07*14
0.07*25
0.07*63
-1*11
source("functions.R")
source("functions.R")
log_neu<-mycv_part(10,dataset_neu_samp,"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
perf_log_neu
names(dataset_neu_samp)
log_neu<-mycv_part(10,dataset_neu_sample[,3:7],"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
dataset_neu_samp
log_neu<-mycv_part(10,dataset_neu_samp[,3:7],"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
perf_log_neu
neu_log3<-glm(label~.,family=binomial(logit), data=dataset_neu_samp[,3:7])
neu_log3
neu_log2
pol_log3<-glm(label~.,family=binomial(logit), data=dataset_pol[,3:7])
pol_log3
pol_tree<-rpart(label~.,dataset_pol[,3:7])
rpart.plot(pol_tree)
log_pol<-mycv_part(10,dataset_pol[,3:7],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
log_pol<-mycv_part(10,dataset_pol,"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
pol_log3
names(dataset_pol)
log_pol<-mycv_part(10,dataset_pol[,5:7],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
log_pol<-mycv_part(10,dataset_pol[,c("earthPol,label")],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
log_pol<-mycv_part(10,dataset_pol[,c("earthPol","label")],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
neu_info_gain<-information.gain(label~.,data=dataset_neu_samp)
pol_info_gain<-information.gain(label~.,data=dataset_pol)
neu_info_gain
pol_info_gain
neu_info_gain
pol_info_gain
summary(dataset_pol$label)
levels(dataset_pol$label)
datos<-read.csv("dataset.csv",header=T,sep="\t")
dataset<-datos[,2:8]
dataset_neu<-cbind(dataset[,1:(length(dataset)-1)],
label=ifelse(dataset$label=="neutral","neutral","non_neutral"))
datos<-read.csv("dataset.csv",header=T,sep="\t")
dataset<-datos[,2:8]
dataset_neu<-cbind(dataset[,1:(length(dataset)-1)],
label=ifelse(dataset$label=="neutral","neutral","non_neutral"))
#Balanceamos usando sampling
neu<-dataset_neu[dataset_neu$label=="neutral",]
neu_data<-neu[sample(1:dim(neu)[1],size=76165,replace=F),]
dataset_neu_samp<-dataset_neu[c(as.numeric(row.names(neu_data)),
which(dataset_neu$label=="non_neutral")),]
dataset_neu_samp<-dataset_neu_samp[order(as.numeric(rownames(dataset_neu_samp))),]
neu_log<-Logistic(label~.,dataset_neu_samp)
neu_log2<-glm(label~.,family=binomial(logit), data=dataset_neu_samp)
neu_log3<-glm(label~.,family=binomial(logit), data=dataset_neu_samp[,3:7])
neu_tree<-rpart(label~.,dataset_neu_samp)
log_neu<-mycv_part(10,dataset_neu_sample,"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
log_neu<-mycv_part(10,dataset_neu_samp[,3:7],"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
# Datasets de polaridad
dataset_pol<-subset(dataset,label!="neutral")
dataset_pol$label<-as.factor(as.character(dataset_pol$label))
#Balanceo con 32322  negativos y 43843  positivos
pos<-dataset_pol[dataset_pol$label=="positive",]
pos_data<-pos[sample(1:dim(pos)[1],size=32322,replace=F),]
dataset_pol<-rbind(dataset_pol[dataset_pol$label=="negative",],pos_data)
dataset_pol<-dataset_pol[order(as.numeric(rownames(dataset_pol))),]
pol_log<-Logistic(label~.,dataset_pol)
pol_log2<-glm(label~.,family=binomial(logit), data=dataset_pol)
pol_log3<-glm(label~.,family=binomial(logit), data=dataset_pol[,3:7])
pol_tree<-rpart(label~.,dataset_pol[,3:7])
log_pol<-mycv_part(10,dataset_pol[,c("earthPol","label")],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
log_pol<-mycv_part(10,dataset_pol,"label",Logistic)
View(dataset)
names(dataset)
names(datos)
dataset<-datos[,2:10]
dataset_neu<-cbind(dataset[,1:(length(dataset)-1)],
label=ifelse(dataset$label=="neutral","neutral","non_neutral"))
#Balanceamos usando sampling
neu<-dataset_neu[dataset_neu$label=="neutral",]
neu_data<-neu[sample(1:dim(neu)[1],size=76165,replace=F),]
dataset_neu_samp<-dataset_neu[c(as.numeric(row.names(neu_data)),
which(dataset_neu$label=="non_neutral")),]
dataset_neu_samp<-dataset_neu_samp[order(as.numeric(rownames(dataset_neu_samp))),]
neu_log<-Logistic(label~.,dataset_neu_samp)
neu_log2<-glm(label~.,family=binomial(logit), data=dataset_neu_samp)
neu_log2
neu_log2$coefficients
as.data.frame(neu_log2$coefficients)
dim(dataset_neu_samp)
neu_log3<-glm(label~.,family=binomial(logit), data=dataset_neu_samp[,3:9])
neu_log3
log_neu<-mycv_part(10,dataset_neu_sample,"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
log_neu<-mycv_part(10,dataset_neu_samp[,3:9],"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
perf_log_neu
perf_log_neu
log_neu<-mycv_part(10,dataset_neu_sample,"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
log_neu<-mycv_part(10,dataset_neu_samp,"label",Logistic)
perf_log_neu<-conf_int_perf(log_neu)
perf_log_neu
log_neu_feat<-mycv_part(10,dataset_neu_samp[,3:9],"label",Logistic)
perf_log_neu_feat<-conf_int_perf(log_neu)
perf_log_neu_feat
perf_log_neu
perf_log_neu_feat<-conf_int_perf(log_neu_feat)
perf_log_neu_feat
neu_log3
summary(dataset_neu_samp)
dataset_pol<-subset(dataset,label!="neutral")
dataset_pol$label<-as.factor(as.character(dataset_pol$label))
#Balanceo con 32322  negativos y 43843  positivos
pos<-dataset_pol[dataset_pol$label=="positive",]
pos_data<-pos[sample(1:dim(pos)[1],size=32322,replace=F),]
dataset_pol<-rbind(dataset_pol[dataset_pol$label=="negative",],pos_data)
dataset_pol<-dataset_pol[order(as.numeric(rownames(dataset_pol))),]
pol_log<-Logistic(label~.,dataset_pol)
pol_log2<-glm(label~.,family=binomial(logit), data=dataset_pol)
pol_log3<-glm(label~.,family=binomial(logit), data=dataset_pol[,3:9])
pol_tree<-rpart(label~.,dataset_pol[,3:9])
log_pol<-mycv_part(10,dataset_pol[,c("earthPol","label")],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
log_pol<-mycv_part(10,dataset_pol,"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
log_pol<-mycv_part(10,dataset_pol[,c("earthPos","earthNeg","label")],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
log_pol<-mycv_part(10,dataset_pol[,3:9],"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
pol_log3
pol_log3<-glm(label~.,family=binomial(logit), data=dataset_pol[,c("earthPos","earthNeg","elhPos","elhNeg"])
pol_log3<-glm(label~.,family=binomial(logit),
data=dataset_pol[,c("earthPos","earthNeg","elhPos","elhNeg")])
c("earthPos","earthNeg","elhPos","elhNeg")
dataset_pol[,c("earthPos","earthNeg","elhPos","elhNeg")]
pol_log3<-glm(label~.,family=binomial(logit),
data=dataset_pol[,c("earthPos","earthNeg","elhPos","elhNeg","label")])
pol_log3
neu_info_gain<-information.gain(label~.,data=dataset_neu_samp)
pol_info_gain<-information.gain(label~.,data=dataset_pol)
neu_info_gain
pol_info_gain
log_pol<-mycv_part(10,dataset_pol[,c("earthPos","earthNeg","elhPos","elhNeg","label")]
,"label",Logistic)
perf_log_pol<-conf_int_perf(log_pol)
perf_log_pol
neu_log3<-glm(label~.,family=binomial(logit),
data=dataset_neu_samp[,c("earthSub","earthNeu","elhPos","elhNeg","label")])
neu_log3
perf_log_neu_feat
log_neu_feat2<-mycv_part(10,
dataset_neu_samp[,c("earthSub","earthNeu","elhPos","elhNeg","label")],
"label",Logistic)
perf_log_neu_feat2<-conf_int_perf(log_neu_feat2)
perf_log_neu_feat2
perf_log_neu_feat
neu_log3
neu_log3<-glm(label~.,family=binomial(logit),
data=dataset_neu_samp[,c("earthSub","earthNeu","earthPos","earthNeg","elhPos","elhNeg","label")])
neu_log3
as.data.frame(neu_log3$coefficients)
as.data.frame(pol_log3$coefficients)
perf_log_pol
dataset2 <- read.delim("~/workspace/EarthQuakeMonitor/dataset2.csv")
View(dataset2)
table(dataset2$label,dataset2$predicted)
a<-dataset2[,c("content","label","predicted")]
View(a)
